{
 "ID": "",
 "BaseURL": "https://blog.merovius.de",
 "Pages": [
  {
   "URL": "https://blog.merovius.de/cdn-cgi/l/email-protection",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/assets/permutation.svg",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/10/19/tic-tac-toe-ai.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I am currently considering writing a basic chess AI as an exercise in AI\ndevelopment and to help me analyze my own games (and hopefully get a better\nchess-player just by thinking about how a machine would do it). As a small\nexercise and to get some familiarity with the algorithms involved, I started\nwith Tic Tac Toe. Because of the\nlimited number of games (only 255168)\nall positions can be bruteforced very fast, which makes it an excellent\nexercise, because even with a very simple\nMinimax-Algorithm\nperfect play is possible.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "\n\t\t  \tAll opinions expressed are my own.\n\t      ",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/04/10/heartbleed-new-certificates.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "The new fingerprints are:\n",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/06/18/how-not-to-use-an-http-router.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "As everyoneâ„¢ knows, people need to stop writing\nrouters/muxs in go.\nSome people\nattribute the\nabundance of routers to the fact that the net/http package fails to provide a\nsufficiently powerful router, so people roll their own. This is also reflected\nin this post,\nin which a gopher complains about how complex and hard to maintain it would be\nto route requests using net/http alone.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2015/07/29/backwards-compatibility-in-go.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I really love go, I really hate vendoring and up until now I didn't really get,\nwhy anyone would think go should need something like that. After all, go seems\nto be predestined to be used with automatically checked semantic versioning.\nYou can enumerate all possible changes to an API in go and the list is quite\nshort. By looking at vcs-tags giving semantic versions and diffing the API, you\ncan automatically check that you never break compatibility (the go compiler and\nstdlib actually do something like that). Heck, in theory you could even write a\npackage manager that automatically (without any further annotations) determines\nthe latest version of a package that still builds all your stuff or gives you\nthe minimum set of packages that need changes to reconcile conflicts.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/10/18/using-roughtime-as-a-cryptographic-notary.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Recently, Cloudflare announced that they are now running a\nroughtime server. Roughtime is a cryptographically secured\ntime-synchronization protocol - think NTP with signatures. For an actual\ndescription of how it works, I recommend reading the Cloudflare blog post. But\nat it's very core (oversimplification ahead), the user chooses an arbitrary\n(usually randomly generated) nonce and the server signs it, plus the current\ntime.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2019/06/12/birdseye-go.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "When we talk about \"Go\", depending on context, we can mean very different\nthings. This is my attempt at providing a very high-level overview of the\nlanguage and ecosystem and to link to the relevant documentation about how each\npart fits together (it's also a bit of a hodgepodge though, addressing\nindividual random questions I encountered recently). So, let's dive in:",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/07/22/using-hilbert-curves-to-100-zelda.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "As you probably know recently the question of what the best Zelda\nGame\nis was finally settled by Breath Of The Wild. Like most people I know I ended\nup playing. And to keep me engaged I early on decided that I would get as close\nas possible to 100% of the game before finishing it. That is I wanted to finish\nall shrines, find all Korok Seeds, max out all armor and do all quests before\nkilling Ganon. I recently finished that and finally killed Ganon. Predictably,\nI was in for a disappointment:",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2016/08/31/ive-been-diagnosed-with-adhd.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "As the title says, I've been recently diagnosed with ADHD and I thought I'd try\nto be as open about it as possible and share my personal experiences with\nmental illness. That being said, I am also adding the disclaimer, that I have\nno training or special knowledge about it and that the fact that I have been\ndiagnosed with ADHD does not mean I am an authoritative source on its\neffects, that this diagnoses is going to stick or that my experiences in any\nway generalize to other people who got the same diagnosis.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/01/21/what_even_is_error_handling.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Error handling in Go is a contentious and often criticized issue. There is no\nshortage on articles criticizing the approach taken, no shortage on articles\ngiving advice on how to deal with it (or defending it) and also no shortage on\nproposals on how to improve it.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/09/28/firstyear-introductory-course-fo.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "This last week I organized a (very basic) introductory course on programming for\nour first-year students. I was set on C++ because it is the language used in the\nintroductory lecture and we wanted to give people with absolutely no background\nin programming or proper use of a computer the necessary tools to start in this\nlecture on mostly equal grounds to people who already took a basic computer\nscience course in school. We had five days, with 3 hours a day to try to reach\nthat goal, which is a very limited amount of time for such a course and we had\n50 participants.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/01/15/generating_entropy_without_imports_in_go.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "This post is inspired by a comment on reddit,\nsaying",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/10/03/new-pgp-key.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I signed the new key with my old key and uploaded it to the\nkeyservers.\nMy old key will be valid for a little longer, so you can still send me\nencrypted Mails using my old key, but I would ask you to transition as\nfast as possible to the new one. If the signature with my old key is\nenough to earn your trust, you can delete the old key and set the new\none to trusted (and maybe even sign it again and mail me the signed\nkey or upload it), else you can check the fingerprint in person when\nwe meet next time.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2015/04/13/difficulties-making-sql-based-au.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "The first obvious thing is, that you need to do a constant time comparison of\npassword-hashes. Luckily, most modern crypto libraries should include something\nlike that (at least go's bcrypt implementation comes with that).",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/01/02/my-case-for-veganism.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "You might be trying to rules-lawyer this. You might be trying to make up an\nargument, for why the replicator-steak would have to be worse. Or that the\ncow would already be dead, so it wouldn't matter. But that is obviously not the\npoint of this thought experiment (and remember, you don't have to convince\nanyone of being right, here). The point is, that I strongly believe that the\nvast majority of people would agree, that all things being equal, choosing\nthe meal that no animal suffered for is the correct choice. And if you truly\nbelieve that it isn't, if you can honestly say to yourself that it doesn't\nmatter: You won't gain anything from the rest of this article. You are relieved\nand might now just as well stop reading.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/10/20/a-day-in-the-life-of-an-omnivore.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "You quickly google the place your manager suggested. \"Green's Organic\nFoodery\".  They don't have a menu on their site, but the name alone makes\nclear, that meat probably isn't their specialty, exactly. You consider asking\nfor a change of restaurant, but quickly decide that you don't want to get a\nreputation as a killjoy who forces their habits on everyone just yet. You\nfigure they are going to have something with meat on their menu. And if\nnot, you can always just grab a burger on your way home or throw a steak into\na pan when you get back.  You copy the event to your calendar and continue\nworking.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/10/20/ext4-mysterious-no-space-left-on.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I am currently restructuring my mail-setup. Currently, I use offlineimap to\nsync my separate accounts to a series of maildirs on my server. I then use sup\non the server as a MUA. I want to switch to a local setup with notmuch, so I\nset up an dovecot imapd on my server and have all my accounts forward to my\nprimary address. I then want to use offlineimap to have my mails in a local\nmaildir, which I browse with notmuch.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/02/19/go-stacktraces.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I recently discovered a pattern which I am quite happy with (for now). You can\ninclude a stacktrace when returning an error. If you disable this behaviour by\ndefault you should have as good as no impact for normal users, while making it\nmuch easier to debug problems. Neat.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/12/16/incentives-in-education.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I often recited the story of how I got to choose computer science over physics\nas a minor in my mathematics bachelor:",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/01/08/monads-are-just-monoids.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "There is a running gag in the programming community, that newcomers will often\nbe confused by the concept of monads (which is how sequential computations are\nmodeled in purely functional languages) and getting the explanation \"it is\nsimple, really: Monads are just monoids in the category of endofunctors\". This\nis not meant as an actual explanation, but rather to poke a bit of fun at the\nhabit of functional programmers to give quite abstract and theoretical\nexplanations at times, that are not all that helpful.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/09/28/relaunch.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "The layout is still pretty shitty, it's the default of jekyll, but I\nwanted to put it online before seing my efforts die again on such\nminor details.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/10/11/how-to-cgolf.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Note: Most of this blog post is incredibly boring. A better way than to\nread through it is to just skip through the git-repository and refer to the\nexplanations here everytime you don't know why a change works or what it\ndoes. To make this easier, I added ankers to every paragraph, named by the\ncommit of the change it explains. So if you want to know, how a specific change\nworks, you can add #commitid to the url of this post, with commitid being\nthe full id of that change. If you want to read the more interesting\nstuff, from about here it starts\nto get non-obvious I think.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/06/22/gpn14-gamejam-crazy-cat-lady.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "At the GPN14 we (meaning me and Lea, with a bit of help by sECuRE) participated\nin the gamejam. It was the first time for\nus both, I did all the coding and Lea provided awesome graphics.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/09/12/the-four-things-i-miss-from-go.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "So when I say, there are a few things popping up I miss about go, this does not\nmean I wish them to be included. I subjectively miss them and it would\ndefinitely make me happy, if they existed. But I still very much like the go\ndevs for prioritizing simplicity over making me happy.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/08/12/applying-permutation-in-constant.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Naively, we would solve our problem by doing something like this (I'm using go\nhere):",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2015/07/17/lazy-evaluation-in-go.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "A small pattern that is usefull for some algorithms is lazy\nevaluation. Haskell is famous\nfor making extensive use of it. One way to emulate goroutine-safe lazy\nevaluation is using closures and the sync-package:",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/09/05/scrapping_contracts.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Recently a Problem Overview\nand Draft Design\nfor generics in Go have dropped. Since then, predictably,\nthere has been a bunch of chatter on the intertubez about it. This is a\nsummary of my thoughts, so far, on the subject - after a bunch of discussions\non Twitter and Reddit.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de//2017/07/30/the-trouble-with-optional-interfaces.html#extraction-methods",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Note: I wrote most of this article on Wednesday, with the intention to finish\nand publish it on the weekend. While I was sleeping, Jack Lindamood published\nthis\npost,\nwhich talks about much of the same problems.\nThis was the exact\nmoment I saw that post :) I decided, to publish this anyway; it contains, in my\nopinion, enough additional content, to be worth it. But I do encourage to\n(also?) read his post.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/07/30/the-trouble-with-optional-interfaces.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Note: I wrote most of this article on Wednesday, with the intention to finish\nand publish it on the weekend. While I was sleeping, Jack Lindamood published\nthis\npost,\nwhich talks about much of the same problems.\nThis was the exact\nmoment I saw that post :) I decided, to publish this anyway; it contains, in my\nopinion, enough additional content, to be worth it. But I do encourage to\n(also?) read his post.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/09/12/diminishing-returns-of-static-typing.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I also often take the other side of the argument. This happens commonly, when\ntalking to proponents of dynamically typed languages. In particular I got into\ndebates of whether Python would be suitable for a certain use-case. When the\nlack of static type-safety is brought up, the proponents of Python defend it by\npointing out that it now features optional type hints. Which they say make it\npossible, to reap the benefits of static typing even in a conventionally\ndynamically typed language.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/08/14/why-context-value-matters-and-how-to-improve-it.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "This blog post is relatively long. I encourage you to skip sections you find boring",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/09/28/lazy-blogging-with-jekyll.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "If you think about setting up your own blog, jekyll seems to be an appropriate\nchoice. This short guide should put you through the process of having an easy\nsetup for writing and deploying your blog via your favourite editor (vim) and\nyour favourite version control system (git) to a publicly available server via\nssh.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/10/20/using-i3-and-vim-to-keep-a-set-o.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "There are often occasions where I want to write something down, while not\nwanting to disturb my thought-process too much or taking too much of an effort.\nAn example for the former would be a short TODO I suddenly remember while doing\nsomething more important. As an example for the latter, I keep an \"account\" for\ndrinks at our local computer club, so that I don't always have to put single\ncoins into the register, but can just put 20â‚¬ or something in and don't have to\nworry about it for a while. Combining the\nscratchpad-window feature of\ni3 with a little vim-magic makes this effortless enough to be actually\npreferable to just paying.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/08/06/what-i-want-from-a-logging-api.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I have been trying for a while now to find (or build) a logging API in Go that\nfills my needs. There are several things that make this hard to get \"right\"\nthough. This is my attempt to describe them coherently in one place.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2013/10/11/inject-environment-variables-int.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Just to document this (a friend asked me): If you ever wanted for example to\nglobally change your $PATH, or add a global $LD_PRELOAD (for example to use\ninsulterr ;) ), without restarting\nyour session, gdb is your friend.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/02/25/persistent_datastructures_with_go.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Persistent datastructures are popular in functional programming languages, but\nI also found the idea a useful tool to model datastructures in Go. Go's\ninterfaces provide a nice way to model them and make them easy to reason about.\nIn this post, I will try to illustrate this with a couple of examples.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2018/06/03/why-doesnt-go-have-variance-in.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "A question that comes up relatively often with Go newcomers is \"why can't I\npass e.g. an []int to a func([]interface{})\"? In this post I want to\nexplore this question and its implications for Go. But the concept of\nvariance (which this is about) is also useful in other languages.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/05/06/python-fnord-of-the-day.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Output:",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de//2017/07/30/the-trouble-with-optional-interfaces.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "Note: I wrote most of this article on Wednesday, with the intention to finish\nand publish it on the weekend. While I was sleeping, Jack Lindamood published\nthis\npost,\nwhich talks about much of the same problems.\nThis was the exact\nmoment I saw that post :) I decided, to publish this anyway; it contains, in my\nopinion, enough additional content, to be worth it. But I do encourage to\n(also?) read his post.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/impressum.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "\n\t\t  \tAll opinions expressed are my own.\n\t      ",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2014/01/23/signed-blog-posts.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "I might have to update my TLS server certificate soon, because the last change\nseems to have broken the verification of https://merovius.de/. This is nothing\ntoo exciting, but it occured to me that I should actually provide some warning\nor notice in that case, so that people can be sure, that there is nothing\nwrong. The easiest way to accomplish this would be a blogpost and the easiest\nway to verify that the statements in that blogpost are correct would be, to\nprovide a signed version. So because of this (and, well, because I can) I\ndecided to sign all my blogposts with my gpg-key. People who know me should\nhave my gpg key so they can verify that I really have written everything I\nclaim.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  },
  {
   "URL": "https://blog.merovius.de/2017/09/05/gendered-marbles.html",
   "Selectors": [
    {
     "Name": "p:nth-of-type(2)",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "A couple of days ago The MarbleLympics 2017\npopped into my twitter stream. In case you are unaware (I certainly was): It's\na series of videos where a bunch of marbles participate in a made-up Olympics.\nThey are split into teams that then participate in a series of \"competitions\"\nin a variety of different events. The whole event is professionally filmed, cut\nand overlaid both with fake noises from spectators and a well-made, engaging\nsports commentary. It is really fun to watch. I don't know why, but I find it\nway more captivating than watching actual sports. I thoroughly recommend it.",
     "LinkURL": "",
     "ImageURL": ""
    },
    {
     "Name": "figure img",
     "ScrapText": true,
     "ScrapLinks": true,
     "ScrapImages": true,
     "Text": "",
     "LinkURL": "",
     "ImageURL": ""
    }
   ]
  }
 ]
}